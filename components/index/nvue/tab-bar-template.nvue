<template>
	<!-- 横向滚动顶部选项卡 -->
	<div class="w-100" style="height: 75px;">
		<scroller class="w-100 flex-row px-2" style="height: 75px;" 
			:show-scrollbar="false" scroll-direction="horizontal">
			<block v-for="(item,index) in arr" :key="index">
				<div style="height: 75px; width: 120px;" class="a-center j-center"
					:ref="`tab_${index}`"
					@click="change(index)">
					<text class="text-muted font-md" 
						style="height: 75px; line-height: 75px; border-bottom-width: 5px; border-style: solid;"
						:style="{'color':tabIndex === index ? '#fd6801':'#333333','border-color':tabIndex === index ? '#fd6801':'#ffffff'}">
						{{item.name}}
					</text>
				</div>
			</block>
		</scroller>
	</div>
</template>

<script>
	
	const dom = weex.requireModule('dom')
	/**
	 * tabBar 组件
	 * @property {Array} arr 选项卡数组
	 * @property {Number} tabIndex 当前选项卡索引
	 */
	export default {
		props:{
			arr: {
				type: Array
			},
			tabIndex: {
				type: Number,
				default: 0
			}
		},
		watch: {
			// 监听 tabIndex 变化
			tabIndexChange(newV,oldV){
				this.change(newV)
			}
		},
		methods:{
			async change(index){
				// 改变当前选中
				// 通知父组件
				// this.tabIndex = index
				this.$emit('tabchange',index)
				// 监听滚动区域变化
				// 拿到当前元素
				let el = this.$refs[`tab_${index}`][0]
				// 获取当前元素信息(节点信息)
				dom.getComponentRect(el,(res)=>{
					// console.log(res);
					// 处于右边
					if(res.size.right > 750){
						// 拿到处于中间的节点
						let newElement = this.$refs[`tab_${index-4}`][0];
						// 将节点滚动到最左边
						return dom.scrollToElement(newElement,{})
					}
					// 处于左边
					if(res.size.left < 0){
						dom.scrollToElement(el,{})
					}
				})
			},
		}
	}
</script>
<style src="@/common/css/mall-nvue.css"></style>
<style>

</style>